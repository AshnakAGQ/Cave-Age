<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_boulder</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>template_wall</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize Enemy variables

dir = -1;   // Enemy defaults to moving left
spd = 3;    // Default horizontal speed
grav = 1;   // Gravity work the same for enemies
hspd = 0;   // Default stopped
vspd = 0;   // Default stopped

// Ledge logic
avoid_ledges = false; 
under_enemy = 8; // Amount of pixels to check under object
killable = false; // Ability to be destroyed
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Enemy movement

hspd = dir * spd;     //spd * -1 = left;
vspd += grav;   // Fall

// Horizontal collisions
if (place_meeting(x + hspd, y, obj_ground) &amp;&amp; place_meeting(x - hspd, y, obj_ground)) 
{
    hspd = 0; // Stop when trapped
    image_speed = 0;
}
else
{
    image_speed = 1;
}
// Horizontal collisions
if (place_meeting(x + hspd, y, template_wall))
{
    // sign(x) = x * -1
    while(!place_meeting(x + sign(hspd), y, template_wall))
    {
        // Move object 1 pixel at a time until it hits a collision
        x += sign(hspd)
    }
    if (position_meeting(x + sprite_width / 2 * sign(hspd) + sign(hspd), y, template_wall) || place_meeting(x + sign(hspd), y - 32, template_wall))
    {
        hspd = 0; // Stop at walls
        
        // Turn object around at walls
        dir *= -1;
    }
}

else if (avoid_ledges &amp;&amp; !position_meeting(x + hspd, bbox_bottom + under_enemy, obj_ground))
{
    hspd = 0;       // Stop at ledge
    dir *= -1;      // Turn around
}

// Move horizontally
x += hspd;

// Vertical collisions
if (place_meeting(x , y + vspd, template_wall) &amp;&amp; !place_meeting(x, y, obj_platform))
{
    // sign(x) = x * -1
    while(!place_meeting(x , y + vspd, template_wall))
    {
        // Move object 1 pixel at a time until it hits a collision
        y += sign(vspd)
    }
    vspd = 0; // Stop at ground
}

//Move vertically
y += vspd;

// Player collisions

if (place_meeting(x,y,obj_player) &amp;&amp; obj_player.bbox_bottom &gt; y) scr_death();    // Will contain death functionality 

if (place_meeting(x, y - 4, obj_player))
{
    with(obj_player)
    {    
        var boulder = instance_place(x, y + 4, obj_boulder);
        if (!place_meeting(x + boulder.hspd * 1.05, y, obj_ground)) x += boulder.hspd * 1.05;
    }
}

// Go up one high blocks
// Fix stuck in platform

while(place_meeting(x, y, template_wall))
{
    // Move object 1 pixel at a time until it hits a collision
    y -= 1;
}

scr_sprite_direction();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
