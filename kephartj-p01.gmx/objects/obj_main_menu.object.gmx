<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Menu options and formatting

// Array for all menu options
menu[0] = "Play";
menu[1] = "Level Select";
menu[2] = "Options";
menu[3] = "Quit";

// Formatting
vSpace = 64;    // Vertical space between menu items
cPos = 0;       // Default menu cursor location
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// User interaction

var mNav = 0; // Default menu option 

mNav -= max(keyboard_check_pressed(vk_up), keyboard_check_pressed(ord("W")), 0);
mNav += max(keyboard_check_pressed(vk_down), keyboard_check_pressed(ord("S")), 0);

if (mNav !=0)
{
    cPos += mNav;
    if (cPos &lt; 0) cPos = array_length_1d(menu) - 1;   // Returns number of items in 1D array
    if (cPos &gt; array_length_1d(menu) - 1)  cPos = 0;
}

// Keyboard Input
var keyPress = max(keyboard_check_released(vk_space), keyboard_check_released(vk_enter), 0);

if (keyPress) scr_menu();   // Call "menu" script
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the menu!

draw_set_halign(fa_left); // left-align text
draw_set_valign(fa_middle); // Center align text
draw_set_font(fnt_menu_options);
draw_set_color(c_silver);

for(var i = 0; i &lt; array_length_1d(menu); i++)
{
    draw_text(x + vSpace, y + (i * vSpace), string(menu[i]));
    draw_sprite(spr_menu_cursor, image_index, x + 16, y + cPos * vSpace);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
